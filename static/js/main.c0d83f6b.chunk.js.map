{"version":3,"sources":["components/Quotes.js","App.js","reportWebVitals.js","index.js"],"names":["Quotes","props","colors","useState","color","setColor","data","setData","getRandomQuote","a","fetch","resp","json","useEffect","className","style","content","author","type","onClick","currentColor","Math","abs","floor","random","colorCallBack","background","App","console","log","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sQAGe,SAASA,EAAOC,GAC7B,IAAMC,EAAS,CACb,OACA,YACA,cACA,OACA,OACA,WAEF,EAA0BC,mBAAS,QAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAVoC,SAerBC,IAfqB,2EAepC,8BAAAC,EAAA,sEACqBC,MAAM,kCAD3B,cACQC,EADR,gBAEqBA,EAAKC,OAF1B,OAEQA,EAFR,OAGEL,EAAQK,GAHV,4CAfoC,sBAWpCC,qBAAU,WACRL,MACC,IAeH,OAAKF,EAGH,sBAAKQ,UAAU,aAAaC,MAAO,CAAE,UAAU,GAAV,OAAcX,IAAnD,UACE,sBAAKU,UAAU,kBAAf,UACE,4BAAIR,EAAKU,UACT,oBAAGF,UAAU,eAAb,eAA+BR,EAAKW,aAEtC,qBAAKH,UAAU,iBAAf,SAEE,wBACEI,KAAK,SACLJ,UAAU,iBACVK,QApBa,WACnB,IAAMC,EAAelB,EAAOmB,KAAKC,IAAID,KAAKE,MAAsB,GAAhBF,KAAKG,UAAiB,IACtEnB,EAASe,GACTnB,EAAMwB,cAAcL,GACpBZ,KAiBMO,MAAO,CAAEW,WAAYtB,GAJvB,6BAVY,KCbLuB,MAff,WACE,IAAIvB,EAAQ,OAOZ,OACE,qBAAKU,UAAU,MAAf,SACE,cAAC,EAAD,CAAQW,cARD,SAACd,GACViB,QAAQC,IAAI,UAAWlB,GACvBP,EAAQO,EACRmB,SAASC,KAAKhB,MAAMiB,gBAAkB5B,QCI3B6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASe,eAAe,SAM1BZ,M","file":"static/js/main.c0d83f6b.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./Quotes.css\";\r\n\r\nexport default function Quotes(props) {\r\n  const colors = [\r\n    \"peru\",\r\n    \"cadetblue\",\r\n    \"forestgreen\",\r\n    \"pink\",\r\n    \"gray\",\r\n    \"crimson\",\r\n  ];\r\n  const [color, setColor] = useState(\"peru\");\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    getRandomQuote();\r\n  }, []);\r\n\r\n  async function getRandomQuote() {\r\n    const resp = await fetch(\"https://api.quotable.io/random\");\r\n    const json = await resp.json();\r\n    setData(json);\r\n  }\r\n\r\n  const getNextQuote = () => {\r\n    const currentColor = colors[Math.abs(Math.floor(Math.random() * 10) - 5)];\r\n    setColor(currentColor);\r\n    props.colorCallBack(currentColor);\r\n    getRandomQuote();\r\n  };\r\n\r\n  if (!data) return null;\r\n\r\n  return (\r\n    <div className=\"quote-card\" style={{ \"--color\": `${color}` }}>\r\n      <div className=\"quote-card-body\">\r\n        <p>{data.content}</p>\r\n        <p className=\"quote-author\">- {data.author}</p>\r\n      </div>\r\n      <div className=\"quote-card-btn\">\r\n        {/* <button style={{ background: color }}>Share</button> */}\r\n        <button\r\n          type=\"button\"\r\n          className=\"next-quote-btn\"\r\n          onClick={getNextQuote}\r\n          style={{ background: color }}\r\n        >\r\n          Next Quote\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Quotes from \"./components/Quotes\";\n\nfunction App() {\n  let color = \"peru\";\n  const cb = (resp) => {\n    console.log(\"resp : \", resp);\n    color = resp;\n    document.body.style.backgroundColor = color;\n  };\n\n  return (\n    <div className=\"App\">\n      <Quotes colorCallBack={cb} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}